spring:
  flyway:
    locations: classpath:db/migration
    url: ${DATABASE_URL}
    user: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    baseline-on-migrate: true
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      topic: ${KAFKA_TOPIC_NAME}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.kcell.testtask.messaging.serializer.KafkaProducerValueSerializer
    consumer:
      topic: ${KAFKA_TOPIC_NAME}
      group-id: ${KAFKA_CONSUMER_GROUP_ID}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: com.kcell.testtask.messaging.serializer.KafkaConsumerValueDeserializer
      enable-auto-commit: false
      auto-offset-reset: earliest
      poll-timeout-ms: ${CONSUMER_POLL_TIMEOUT_MILLISECONDS}
      commit-interval-ms: ${CONSUMER_COMMIT_INTERVAL_MILLISECONDS}
      threads-amount: ${CONSUMER_THREAD_POOL_THREADS_AMOUNT}
  security:
    jwt:
      secret-key: ${JWT_SECRET}
      expiration: ${JWT_EXPIRATION_MILLISECONDS}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create
    show-sql: true
  graphql:
    graphiql:
      enabled: true